                                                 -*--*---*--*-Session 1--*---*---*-
                  
-----Ques1-----
Create a class of ArrayList and add the objects by using add method and print the all the values which you added.
import java.util.ArrayList;

public class ArrayListEx {

	public static void main(String[] args) {
		ArrayList a=new ArrayList();
		a.add("Hello");
		a.add(100);
		a.add(true);
		a.add(2.9f);
		System.out.println(a);
	}
}

-----Ques2-----
Create a of Linked List add the heterogenous objects print all the objects.
import java.util.LinkedList;

public class LinkedListEx1 {
	public static void main(String[] args) {
		
	
LinkedList l=new LinkedList();
l.add(123);
l.add("Hello");
l.add(null);
l.add(true);
System.out.println(l);

}
}

-----Ques3-----
Create a LinkedList class and apply different methods for that class size(),contains(),isEmpty(),getFisrt(). print the results.
import java.util.LinkedList;

public class LinkedListEx {
	public static void main(String[] args) {
		
	
LinkedList l=new LinkedList();
l.add(123);
l.add("Hello");
l.add(null);
l.add(true);
System.out.println(l.isEmpty());
System.out.println(l.size());
System.out.println(l.remove());
System.out.println(l.contains(null));
System.out.println(l.getFirst());

}
}


-----Ques4-----
 class name is test and taking arraylist object add different objects and print the values by using for loop and foreach loop.
 import java.util.ArrayList;

public class Test {
public static void main(String[] args) {
	ArrayList a=new ArrayList();
	a.add("Hello");
	a.add(100);
	a.add(true);
	a.add(2.9f);
	System.out.println("Using for loop");
	for(int i=0;i<a.size();i++) {
		System.out.println(a.get(i));
	}System.out.println("Using for each loop");
	for(Object obj:a) {
		System.out.println(obj);
	}
}
}

-----Ques5------
 Create a class with generics(perticular type integer) and add the values print even numbers.
 import java.util.ArrayList;

public class GenericEx {
public static void main(String[] args) {
	ArrayList<Integer> a=new <Integer> ArrayList();
	//adding element to array list
for(int i=1;i<=10;i++) {
	a.add(i);
}
//printing even numbers
for(Object obj:a) {
 Integer o=(Integer)obj;
	if(o%2==0) {
		System.out.println(obj);
	}
}
}
}

------Ques6----
Create a ArrayList class by using Iterator print the values.
import java.util.ArrayList;
import java.util.Iterator;
public class IteratorEx {
public static void main(String[] args) {
	ArrayList <Integer>a=new ArrayList();
	
	
	a.add(1);
	a.add(23);
	a.add(12);
	a.add(11);
	Iterator i=a.iterator();
	while(i.hasNext()) {
		System.out.println(i.next());
	}
	
}
}

------Ques7------
Create a class with generics and apply ListIterator cursor on that class and print the values.
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
public class ListIteratorEx {
public static void main(String[] args) {
	LinkedList<Character> l=new LinkedList();
	l.add('a');
	l.add('b');
	l.add('c');
	l.add('d');
	l.add('e');
	ListIterator li=l.listIterator();
	while(li.hasNext()) {
		System.out.println(li.next());
		
	}
	while(li.hasPrevious()) {
		System.out.println(li.previous());
	}
	}
}

                                                               -*--*---*--*-Session 2--*---*---*-
							    
----Ques3-----
Create a of HasSet add the heterogenous objects print all the objects.
import java.util.HashSet;

public class HashSetEx {
public static void main(String[] args) {
	HashSet h=new HashSet();
	h.add(1);
	h.add(2.9f);
	h.add(3.09);
	h.add("Hii");
	System.out.println(h);
}
}
-------Ques4-------
Create a of Linked HashSet add the heterogenous objects print all the objects.
import java.util.LinkedHashSet;

public class LinkedHashSetEx {
public static void main(String[] args) {
	LinkedHashSet lh=new LinkedHashSet();
	lh.add("Hii!");
	lh.add(12);
	lh.add(12);
	lh.add(true);
	System.out.println(lh);
}
}

-------Ques5-----
By using Generics create Tree Set and print the all the values.
import java.util.TreeSet;

public class TreeSetEx {
public static void main(String[] args) {
	TreeSet <Character>ts=new TreeSet();
	ts.add('e');
	ts.add('a');
	ts.add('b');
	ts.add('d');
	ts.add('c');
	System.out.println(ts);
}
}
						       
							       
							   
